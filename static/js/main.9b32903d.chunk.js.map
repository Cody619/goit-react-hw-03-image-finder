{"version":3,"sources":["components/Searchbar.js","components/ImageGalleryItem.js","components/Modal.js","components/ImageGallery.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","searchText","handleChange","event","setState","currentTarget","value","handleSubmite","preventDefault","props","onSubmit","className","this","type","onChange","autocomplete","autoFocus","placeholder","Component","ImageGalleryItem","onClick","src","alt","Modal","handleOverLayClick","target","onClose","handlePress","code","window","addEventListener","removeEventListener","ReactDOM","createPortal","bigUrl","document","getElementById","ImageGallery","isModalOpen","imgUrl","modalOpen","modalClose","imgs","map","item","previewURL","largeImageURL","id","Button","api_key","axios","defaults","baseURL","App","isLoading","currentPage","lastSearchText","loadMore","params","queryString","stringify","key","q","page","per_page","image_type","orientation","get","then","response","data","hits","scrollTo","top","documentElement","scrollHeight","behavior","fetchImg","pege","color","height","width","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"uTAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAKEC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,WAAYE,EAAME,cAAcC,SAPtC,EAWEC,cAAgB,SAACJ,GACfA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,aAbnC,4CAgBE,WACE,OACE,wBAAQU,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaD,SAAUE,KAAKL,cAA5C,UACE,wBAAQM,KAAK,SAASF,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEL,MAAOM,KAAKZ,MAAMC,WAClBa,SAAUF,KAAKV,aACfS,UAAU,mBACVE,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,sCA/BxB,GAA+BC,a,kCCDlBC,EAAmB,SAACV,GAC/B,OACE,oBAAIE,UAAU,mBAAmBS,QAASX,EAAMW,QAAhD,SACE,qBACEC,IAAKZ,EAAMY,IACXC,IAAI,4EACJX,UAAU,8BCJLY,EAAb,4MACEC,mBAAqB,SAACrB,GAChBA,EAAMsB,SAAWtB,EAAME,eAAe,EAAKI,MAAMiB,WAFzD,EAIEC,YAAc,SAACxB,GACM,WAAfA,EAAMyB,MACR,EAAKnB,MAAMiB,WANjB,uDASE,WACEG,OAAOC,iBAAiB,UAAWlB,KAAKe,eAV5C,kCAYE,WACEE,OAAOE,oBAAoB,UAAWnB,KAAKe,eAb/C,oBAgBE,WACE,OAAOK,IAASC,aACd,qBAAKtB,UAAU,UAAUS,QAASR,KAAKY,mBAAvC,SACE,qBAAKb,UAAU,QAAf,SACE,qBAAKU,IAAKT,KAAKH,MAAMyB,OAAQZ,IAAI,SAGrCa,SAASC,eAAe,kBAvB9B,GAA2BlB,aCCdmB,EAAb,4MACErC,MAAQ,CACNsC,aAAa,EACbC,OAAQ,IAHZ,EAMEC,UAAY,SAACD,GACX,EAAKnC,SAAS,CACZkC,aAAa,EACbC,YATN,EAYEE,WAAa,WACX,EAAKrC,SAAS,CAAEkC,aAAa,KAbjC,4CAeE,WAAU,IAAD,OACP,OACE,gCACE,oBAAI3B,UAAU,eAAd,SACGC,KAAKH,MAAMiC,KAAKC,KAAI,SAACC,GACpB,OACE,cAAC,EAAD,CAEEvB,IAAKuB,EAAKC,WACVzB,QAAS,WACP,EAAKoB,UAAUI,EAAKE,iBAHjBF,EAAKG,SASjBnC,KAAKZ,MAAMsC,YACV,cAAC,EAAD,CAAOZ,QAASd,KAAK6B,WAAYP,OAAQtB,KAAKZ,MAAMuC,SAClD,YAjCZ,GAAkCrB,aCHrB8B,EAAS,SAACvC,GACrB,OACE,wBAAQE,UAAU,SAASS,QAASX,EAAMW,QAA1C,wBCME6B,EAAU,qCAGhBC,IAAMC,SAASC,QAFE,2B,IAIXC,E,4MACJrD,MAAQ,CACNsD,WAAW,EACXZ,KAAM,I,EAGRa,YAAc,E,EACdC,eAAiB,G,EAEjBC,SAAW,WACT,EAAKrD,SAAS,CACZkD,WAAW,IAEb,EAAKC,aAAe,EAEpB,IAAMG,EAASC,IAAYC,UAAU,CACnCC,IAAKZ,EACLa,EAAG,EAAKN,eACRO,KAAM,EAAKR,YACXS,SAAU,GACVC,WAAY,QACZC,YAAa,eAGfhB,IAAMiB,IAAI,IAAMT,GAAQU,MAAK,SAACC,GAC5B,EAAKjE,UACH,SAACJ,GACC,MAAO,CACLsD,WAAW,EACXZ,KAAK,GAAD,mBAAM1C,EAAM0C,MAAZ,YAAqB2B,EAASC,KAAKC,WAG3C,WACE1C,OAAO2C,SAAS,CACdC,IAAKtC,SAASuC,gBAAgBC,aAC9BC,SAAU,kB,EAOpBC,SAAW,SAAC5E,GACV,EAAKG,SAAS,CACZkD,WAAW,IAEb,EAAKC,YAAc,EACnB,EAAKC,eAAiBvD,EAEtB,IAAMyD,EAASC,IAAYC,UAAU,CACnCC,IAAKZ,EACLa,EAAG7D,EACH6E,KAAM,EACNd,SAAU,GACVC,WAAY,QACZC,YAAa,eAGfhB,IAAMiB,IAAI,IAAMT,GAAQU,MAAK,SAACC,GAC5B,EAAKjE,SAAS,CACZkD,WAAW,EACXZ,KAAM2B,EAASC,KAAKC,W,4CAK1B,WACE,OACE,gCACE,cAAC,EAAD,CAAW7D,SAAUE,KAAKiE,WAC1B,cAAC,EAAD,CAAcnC,KAAM9B,KAAKZ,MAAM0C,OAC/B,sBAAK/B,UAAU,SAAf,UACGC,KAAKZ,MAAMsD,UACV,cAAC,IAAD,CACEzC,KAAK,eACLkE,MAAM,UACNC,OAAQ,GACRC,MAAO,KAEP,KACwB,IAA3BrE,KAAKZ,MAAM0C,KAAKwC,QAAiBtE,KAAKZ,MAAMsD,UAEzC,KADF,cAAC,EAAD,CAAQlC,QAASR,KAAK6C,qB,GAjFhBvC,aAyFHmC,IC3FA8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdpD,IAAS2D,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzD,SAASC,eAAe,SAM1B+C,M","file":"static/js/main.9b32903d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class Searchbar extends Component {\r\n  state = {\r\n    searchText: '',\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      searchText: event.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  handleSubmite = (event) => {\r\n    event.preventDefault()\r\n    this.props.onSubmit(this.state.searchText)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmite}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.searchText}\r\n            onChange={this.handleChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autocomplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nexport const ImageGalleryItem = (props) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={props.onClick}>\r\n      <img\r\n        src={props.src}\r\n        alt=\"все сломалось\"\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nexport class Modal extends Component {\r\n  handleOverLayClick = (event) => {\r\n    if (event.target === event.currentTarget) this.props.onClose()\r\n  }\r\n  handlePress = (event) => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose()\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handlePress)\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handlePress)\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleOverLayClick}>\r\n        <div className=\"Modal\">\r\n          <img src={this.props.bigUrl} alt=\"\" />\r\n        </div>\r\n      </div>,\r\n      document.getElementById('ModalRoot'),\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { ImageGalleryItem } from './ImageGalleryItem'\r\nimport { Modal } from './Modal'\r\n\r\nexport class ImageGallery extends Component {\r\n  state = {\r\n    isModalOpen: false,\r\n    imgUrl: '',\r\n  }\r\n\r\n  modalOpen = (imgUrl) => {\r\n    this.setState({\r\n      isModalOpen: true,\r\n      imgUrl,\r\n    })\r\n  }\r\n  modalClose = () => {\r\n    this.setState({ isModalOpen: false })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"ImageGallery\">\r\n          {this.props.imgs.map((item) => {\r\n            return (\r\n              <ImageGalleryItem\r\n                key={item.id}\r\n                src={item.previewURL}\r\n                onClick={() => {\r\n                  this.modalOpen(item.largeImageURL)\r\n                }}\r\n              />\r\n            )\r\n          })}\r\n        </ul>\r\n        {this.state.isModalOpen ? (\r\n          <Modal onClose={this.modalClose} bigUrl={this.state.imgUrl} />\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nexport const Button = (props) => {\r\n  return (\r\n    <button className=\"Button\" onClick={props.onClick}>\r\n      Load More\r\n    </button>\r\n  )\r\n}\r\n","import './App.css'\nimport axios from 'axios'\nimport { Searchbar } from './components/Searchbar'\nimport { Component } from 'react'\nimport Loader from 'react-loader-spinner'\nimport queryString from 'query-string'\nimport { ImageGallery } from './components/ImageGallery'\nimport { Button } from './components/Button'\n\nconst api_key = '24139872-fead068626907a7ba14cf06e1'\nconst base_URL = 'https://pixabay.com/api/'\n\naxios.defaults.baseURL = base_URL\n\nclass App extends Component {\n  state = {\n    isLoading: false,\n    imgs: [],\n  }\n\n  currentPage = 1\n  lastSearchText = ''\n\n  loadMore = () => {\n    this.setState({\n      isLoading: true,\n    })\n    this.currentPage += 1\n\n    const params = queryString.stringify({\n      key: api_key,\n      q: this.lastSearchText,\n      page: this.currentPage,\n      per_page: 12,\n      image_type: 'photo',\n      orientation: 'horizontal',\n    })\n\n    axios.get('?' + params).then((response) => {\n      this.setState(\n        (state) => {\n          return {\n            isLoading: false,\n            imgs: [...state.imgs, ...response.data.hits],\n          }\n        },\n        () => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          })\n        },\n      )\n    })\n  }\n\n  fetchImg = (searchText) => {\n    this.setState({\n      isLoading: true,\n    })\n    this.currentPage = 1\n    this.lastSearchText = searchText\n\n    const params = queryString.stringify({\n      key: api_key,\n      q: searchText,\n      pege: 1,\n      per_page: 12,\n      image_type: 'photo',\n      orientation: 'horizontal',\n    })\n\n    axios.get('?' + params).then((response) => {\n      this.setState({\n        isLoading: false,\n        imgs: response.data.hits,\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Searchbar onSubmit={this.fetchImg} />\n        <ImageGallery imgs={this.state.imgs} />\n        <div className=\"Center\">\n          {this.state.isLoading ? (\n            <Loader\n              type=\"BallTriangle\"\n              color=\"#00BFFF\"\n              height={25}\n              width={25}\n            />\n          ) : null}\n          {this.state.imgs.length !== 0 && !this.state.isLoading ? (\n            <Button onClick={this.loadMore} />\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}